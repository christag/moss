# ============================================================================
# M.O.S.S. Production Docker Compose Configuration
# Uses pre-built images from GitHub Container Registry
# ============================================================================
version: '3.8'

services:
  # ==========================================================================
  # PostgreSQL Database
  # ==========================================================================
  postgres:
    image: postgres:16-alpine
    container_name: moss_postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-moss}
      POSTGRES_USER: ${POSTGRES_USER:-moss}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:?POSTGRES_PASSWORD is required}
      POSTGRES_INITDB_ARGS: "-E UTF8 --locale=en_US.UTF-8"
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sh:/docker-entrypoint-initdb.d/init-db.sh:ro
    ports:
      - "5432:5432"
    networks:
      - moss_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-moss} -d ${POSTGRES_DB:-moss}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    command: >
      postgres
      -c shared_buffers=256MB
      -c max_connections=200
      -c work_mem=16MB
      -c maintenance_work_mem=64MB
      -c effective_cache_size=1GB
      -c checkpoint_completion_target=0.9
      -c wal_buffers=16MB
      -c default_statistics_target=100
      -c random_page_cost=1.1
      -c effective_io_concurrency=200
      -c min_wal_size=1GB
      -c max_wal_size=4GB

  # ==========================================================================
  # Redis Cache
  # ==========================================================================
  redis:
    image: redis:7-alpine
    container_name: moss_redis
    restart: unless-stopped
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD:?REDIS_PASSWORD is required}
    command: >
      redis-server
      --requirepass ${REDIS_PASSWORD}
      --maxmemory 512mb
      --maxmemory-policy allkeys-lru
      --appendonly yes
      --appendfsync everysec
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - moss_network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
      start_period: 5s

  # ==========================================================================
  # M.O.S.S. Application (Pre-built from GHCR)
  # ==========================================================================
  app:
    image: ghcr.io/christag/moss:${IMAGE_TAG:-latest}
    container_name: moss
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      # ======================================================================
      # Core Application Settings
      # ======================================================================
      NODE_ENV: production
      PORT: 3000
      NEXT_PUBLIC_APP_URL: ${NEXT_PUBLIC_APP_URL:-http://localhost:3000}

      # ======================================================================
      # Database Configuration
      # ======================================================================
      DATABASE_URL: postgresql://${POSTGRES_USER:-moss}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB:-moss}

      # ======================================================================
      # Redis Configuration
      # ======================================================================
      REDIS_URL: redis://:${REDIS_PASSWORD}@redis:6379

      # ======================================================================
      # Authentication Configuration
      # ======================================================================
      NEXTAUTH_URL: ${NEXTAUTH_URL:-http://localhost:3000}
      NEXTAUTH_SECRET: ${NEXTAUTH_SECRET:?NEXTAUTH_SECRET is required}

      # ======================================================================
      # Branding Settings (overrides system_settings table)
      # ======================================================================
      MOSS_SITE_NAME: ${MOSS_SITE_NAME:-M.O.S.S.}
      MOSS_LOGO_URL: ${MOSS_LOGO_URL:-}
      MOSS_FAVICON_URL: ${MOSS_FAVICON_URL:-}
      MOSS_PRIMARY_COLOR: ${MOSS_PRIMARY_COLOR:-#1C7FF2}
      MOSS_BACKGROUND_COLOR: ${MOSS_BACKGROUND_COLOR:-#FAF9F5}
      MOSS_TEXT_COLOR: ${MOSS_TEXT_COLOR:-#231F20}
      MOSS_ACCENT_COLOR: ${MOSS_ACCENT_COLOR:-#28C077}

      # ======================================================================
      # Authentication Settings
      # ======================================================================
      MOSS_AUTH_BACKEND: ${MOSS_AUTH_BACKEND:-local}
      MOSS_MFA_REQUIRED: ${MOSS_MFA_REQUIRED:-false}
      MOSS_SESSION_TIMEOUT: ${MOSS_SESSION_TIMEOUT:-2592000}
      MOSS_PASSWORD_MIN_LENGTH: ${MOSS_PASSWORD_MIN_LENGTH:-8}
      MOSS_PASSWORD_REQUIRE_UPPERCASE: ${MOSS_PASSWORD_REQUIRE_UPPERCASE:-true}
      MOSS_PASSWORD_REQUIRE_LOWERCASE: ${MOSS_PASSWORD_REQUIRE_LOWERCASE:-true}
      MOSS_PASSWORD_REQUIRE_NUMBERS: ${MOSS_PASSWORD_REQUIRE_NUMBERS:-true}
      MOSS_PASSWORD_REQUIRE_SPECIAL: ${MOSS_PASSWORD_REQUIRE_SPECIAL:-false}

      # SAML Settings
      MOSS_SAML_ENABLED: ${MOSS_SAML_ENABLED:-false}
      MOSS_SAML_IDP_ENTITY_ID: ${MOSS_SAML_IDP_ENTITY_ID:-}
      MOSS_SAML_IDP_SSO_URL: ${MOSS_SAML_IDP_SSO_URL:-}
      MOSS_SAML_IDP_CERTIFICATE: ${MOSS_SAML_IDP_CERTIFICATE:-}

      # ======================================================================
      # Storage Settings
      # ======================================================================
      MOSS_STORAGE_BACKEND: ${MOSS_STORAGE_BACKEND:-local}
      MOSS_STORAGE_LOCAL_PATH: ${MOSS_STORAGE_LOCAL_PATH:-/app/uploads}

      # S3-Compatible Storage (Cloudflare R2, AWS S3, MinIO)
      MOSS_S3_ENDPOINT: ${MOSS_S3_ENDPOINT:-}
      MOSS_S3_BUCKET: ${MOSS_S3_BUCKET:-}
      MOSS_S3_REGION: ${MOSS_S3_REGION:-us-east-1}
      MOSS_S3_ACCESS_KEY: ${MOSS_S3_ACCESS_KEY:-}
      MOSS_S3_SECRET_KEY: ${MOSS_S3_SECRET_KEY:-}

      # NFS Storage
      MOSS_NFS_SERVER: ${MOSS_NFS_SERVER:-}
      MOSS_NFS_PATH: ${MOSS_NFS_PATH:-}

      # SMB/CIFS Storage
      MOSS_SMB_SERVER: ${MOSS_SMB_SERVER:-}
      MOSS_SMB_SHARE: ${MOSS_SMB_SHARE:-}
      MOSS_SMB_USERNAME: ${MOSS_SMB_USERNAME:-}
      MOSS_SMB_PASSWORD: ${MOSS_SMB_PASSWORD:-}

      # ======================================================================
      # Notification Settings (SMTP)
      # ======================================================================
      MOSS_SMTP_ENABLED: ${MOSS_SMTP_ENABLED:-false}
      MOSS_SMTP_HOST: ${MOSS_SMTP_HOST:-}
      MOSS_SMTP_PORT: ${MOSS_SMTP_PORT:-587}
      MOSS_SMTP_USERNAME: ${MOSS_SMTP_USERNAME:-}
      MOSS_SMTP_PASSWORD: ${MOSS_SMTP_PASSWORD:-}
      MOSS_SMTP_FROM_ADDRESS: ${MOSS_SMTP_FROM_ADDRESS:-}
      MOSS_SMTP_FROM_NAME: ${MOSS_SMTP_FROM_NAME:-M.O.S.S.}
      MOSS_SMTP_USE_TLS: ${MOSS_SMTP_USE_TLS:-true}

      # ======================================================================
      # General Settings
      # ======================================================================
      MOSS_TIMEZONE: ${MOSS_TIMEZONE:-UTC}
      MOSS_DATE_FORMAT: ${MOSS_DATE_FORMAT:-YYYY-MM-DD}
      MOSS_ITEMS_PER_PAGE: ${MOSS_ITEMS_PER_PAGE:-50}

      # Backup Settings
      MOSS_BACKUP_ENABLED: ${MOSS_BACKUP_ENABLED:-false}
      MOSS_BACKUP_FREQUENCY: ${MOSS_BACKUP_FREQUENCY:-daily}
      MOSS_BACKUP_RETENTION_DAYS: ${MOSS_BACKUP_RETENTION_DAYS:-30}

      # File Upload Settings
      MOSS_MAX_FILE_SIZE_MB: ${MOSS_MAX_FILE_SIZE_MB:-50}
      MOSS_ALLOWED_MIME_TYPES: ${MOSS_ALLOWED_MIME_TYPES:-image/*,application/pdf,application/vnd.ms-excel,application/vnd.openxmlformats-officedocument.spreadsheetml.sheet,application/msword,application/vnd.openxmlformats-officedocument.wordprocessingml.document,text/*}

    volumes:
      - uploads_data:/app/uploads
      - ./migrations:/app/migrations:ro
    ports:
      - "${APP_PORT:-3000}:3000"
    networks:
      - moss_network
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3000/api/health', (r) => {process.exit(r.statusCode === 200 ? 0 : 1)})"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

# ============================================================================
# Networks
# ============================================================================
networks:
  moss_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

# ============================================================================
# Volumes
# ============================================================================
volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  uploads_data:
    driver: local
